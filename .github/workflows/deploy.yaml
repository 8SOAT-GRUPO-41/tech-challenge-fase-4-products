name: Products API Deploy
on:
  push:
    branches: ["main"]

env:
  CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  DOCKER_IMAGE: rafaelvmasc/lanchonete-products-api

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Get Commit Short Hash
        id: commit_hash
        run: echo "image_tag=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:${{ env.image_tag }} .
          docker push ${{ env.DOCKER_IMAGE }}:${{ env.image_tag }}

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Get kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region us-east-1

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Helm Upgrade
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
        run: |
          helm upgrade --install lanchonete-products-api ./k8s/lanchonete-products-api \
            --set api.env.DB_USER=$DB_USER \
            --set api.env.DB_PASSWORD=$DB_PASSWORD \
            --set api.env.DB_NAME=$DB_NAME \
            --set api.env.DB_HOST=$DB_HOST \
            --set api.image.repository=${{ env.DOCKER_IMAGE }} \
            --set api.image.tag=${{ env.image_tag }}
